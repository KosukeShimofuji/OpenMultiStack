syntax on
"カラースキーマ設定
"colorscheme simplewhite
"vi互換モードをオフ(vimの拡張機能を有効)
set nocompatible
"バッファを保存しなくても他のバッファを表示できるようにする
set hidden
"コマンドライン保管を便利に
set wildmenu
"タイプ途中のコマンドを画面最下行に表示
set showcmd
"検索語を強調表示
set hlsearch
"検索時に大文字・小文字を区別しない。
set ignorecase
"ただし検索語に大文字、小文字が混在しているときは区別する
set smartcase
"オートインデント、改行、インサートモード開始直後にバックスペースキーで削除できるように
set backspace=indent,eol,start
"オートインデントを有効にする
set autoindent
" 移動コマンドを使ったとき、行頭に移動しない
set nostartofline
" 画面最下行にルーラーを表示する
set ruler
" ステータスラインを常に表示する
set laststatus=2
" ステータスライン
set statusline=%<%f\ %m%r%h%w%y%{'['.(&fenc!=''?&fenc:&enc).']['.&ff.']'}%=%4v\%l/%L
"バッファが変更されているとき、コマンドをエラーにするのではなく保存する
set confirm
"ビープの変わりにヴィジュアルベルを使う
set visualbell
"そしてヴィジュアルベルも無効にする
set t_vb=
"コマンドラインの高さを1行に
set cmdheight=1
"行番号を表示
set number
"キーコードはすぐにタイムアウト。マッピングはタイムアウトしない。
set notimeout ttimeout ttimeoutlen=200

"clipboard onでコンパイルしないと意味がない
"ヴィジュアルモードで選択したテキストをクリップボードに入れる。
"set clipboard+=autoselect
"yankしたテキストを無名レジスタだけではく*レジスタに入れる
"set clipboard=unnamed

"スペースでインデントする
set expandtab
" インデント幅を設定する
set softtabstop=4
set shiftwidth=4

set encoding=utf-8
set fileencoding=utf-8
"set fileencodings=iso-2022-jp,euc-jp,

"80文字で改行する
set textwidth=80
set colorcolumn=80

" バックアップ設定
set backupext=,backup
set backup
set backupdir=~/.vim/backup
set swapfile
set directory=~/.vim/swap

"タグジャンプのCtrl-]とCtrl-Tをよく使用するが、Ctrl-Tはtmuxにかぶるのでctrl-[に変更
nnoremap <C-[> :pop<CR>

"タグリスト
set tags=tags

" #---------------------------#
" # Start Neobundle Settings. #
" #---------------------------#

" bundleで管理するディレクトリを指定
set runtimepath+=~/.vim/bundle/neobundle.vim/
 
" Required:
call neobundle#begin(expand('~/.vim/bundle/'))
 
" neobundle自体をneobundleで管理
NeoBundleFetch 'Shougo/neobundle.vim'
 
" 追加でプラグインをインストール際は以下に記述
NeoBundle 'rcmdnk/vim-markdown'
NeoBundle 'kannokanno/previm'
NeoBundle 'tyru/open-browser.vim'
au BufRead,BufNewFile *.md set filetype=markdown
let g:previm_open_cmd = 'firefox'
let g:previm_open_cmd = 'open -a Firefox'

" Trinity
" Command : TrinityToggleAll
NeoBundle 'The-NERD-tree'
NeoBundle 'taglist.vim'
NeoBundle 'https://github.com/wesleyche/SrcExpl.git'
NeoBundle 'https://github.com/wesleyche/Trinity.git'

" vimでバイナリファイルを開く
" Command : Vinarise
NeoBundle 'Shougo/vinarise'
" keybind
" V 	Vimで開き直す
" q 	ファイルを隠す
" Q 	Vinarizeを終了する
" l 	次の列へ移動
" h 	次の列へ移動
" gh 	行頭のアドレスへ移動
" 0 	行頭のアドレスへ移動
" ^ 	行末のアドレスへ移動
" gl 	行末のアドレスへ移動
" $ 	行末のアドレスへ移動
" j 	次の行へ移動
" k 	前の行へ移動
" <C-f> 	一画面先へ移動
" <C-b> 	一画面前へ移動
" <PageDown> 	一画面先へ移動
" <PageUp> 	一画面前へ移動
" <C-d> 	半画面先へ移動
" <C-u> 	半画面前へ移動
" <C-g> 	現在位置の値を表示
" r 	現在位置の値を変更
" R 	現在のアドレスから続けて書き換える
" gG 	入力したアドレス位置へ移動
" go 	入力したオフセット値の分だけ移動
" gg 	最初のアドレスへ移動
" G 	最後のアドレスへ移動
" / 	バイナリ値を検索
" ? 	バイナリ値を逆向きに検索
" g/ 	文字列を検索
" g? 	文字列を逆向きに検索
" e/ 	正規表現で検索
" n 	次のパターンを検索
" N 	直前のパターンを検索
" E 	エンコードを変更
" <C-l> 	再描画する
" g<C-l> 	Vinariseの再読み込み
" B 	ビットマップを描画
" w 	次の値までスキップ
" b 	前の値までスキップ

NeoBundle 'kana/vim-submode'

" Hatena Blog
NeoBundle 'mattn/webapi-vim'
NeoBundle 'Shougo/unite.vim'
NeoBundle 'moznion/hateblo.vim'

call neobundle#end()
 
" Required:
filetype plugin indent on
 
" 未インストールのプラグインがある場合、インストールするかどうかを尋ねてくれるようにする設定
" 毎回聞かれると邪魔な場合もあるので、この設定は任意です。
NeoBundleCheck

" タブとウィンドウ機能を使いこなす
" http://qiita.com/tekkoc/items/98adcadfa4bdc8b5a6ca
nnoremap s <Nop>
nnoremap sj <C-w>j
nnoremap sk <C-w>k
nnoremap sl <C-w>l
nnoremap sh <C-w>h
nnoremap sJ <C-w>J
nnoremap sK <C-w>K
nnoremap sL <C-w>L
nnoremap sH <C-w>H
nnoremap sn gt
nnoremap sp gT
nnoremap sr <C-w>r
nnoremap s= <C-w>=
nnoremap sw <C-w>w
nnoremap so <C-w>_<C-w>|
nnoremap sO <C-w>=
nnoremap sN :<C-u>bn<CR>
nnoremap sP :<C-u>bp<CR>
nnoremap st :<C-u>tabnew<CR>
nnoremap sT :<C-u>Unite tab<CR>
nnoremap ss :<C-u>sp<CR>
nnoremap sv :<C-u>vs<CR>
nnoremap sq :<C-u>q<CR>
nnoremap sQ :<C-u>bd<CR>
nnoremap sb :<C-u>Unite buffer_tab -buffer-name=file<CR>
nnoremap sB :<C-u>Unite buffer -buffer-name=file<CR>

call submode#enter_with('bufmove', 'n', '', 's>', '<C-w>>')
call submode#enter_with('bufmove', 'n', '', 's<', '<C-w><')
call submode#enter_with('bufmove', 'n', '', 's+', '<C-w>+')
call submode#enter_with('bufmove', 'n', '', 's-', '<C-w>-')
call submode#map('bufmove', 'n', '', '>', '<C-w>>')
call submode#map('bufmove', 'n', '', '<', '<C-w><')
call submode#map('bufmove', 'n', '', '+', '<C-w>+')
call submode#map('bufmove', 'n', '', '-', '<C-w>-')


